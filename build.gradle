plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

version = '0.2.0'
group = 'com.whereishumanity' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'whereishumanity'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // Channel:   Version:
    // official   MCVersion
    // parchment  YYYY.MM.DD-MCVersion
    mappings channel: 'official', version: '1.20.1'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'whereishumanity'

            mods {
                whereishumanity {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'whereishumanity'

            mods {
                whereishumanity {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'whereishumanity'

            mods {
                whereishumanity {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'whereishumanity', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                whereishumanity {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.2.0'
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
            "Specification-Title"     : "Where is Humanity",
            "Specification-Vendor"    : "whereishumanity",
            "Specification-Version"   : "1", // We are version 1 of ourselves
            "Implementation-Title"    : project.name,
            "Implementation-Version"  : project.jar.archiveVersion,
            "Implementation-Vendor"   : "whereishumanity",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}